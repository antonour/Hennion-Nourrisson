// Generated by dia2code
#ifndef RENDER__LAYER__H
#define RENDER__LAYER__H

#include <map>
#include <vector>

namespace Render {
  class TileSet;
  class Surface;
  class Animation;
};
namespace state {
  class StateEvent;
  class Element;
  class State;
  class IObserver;
}

#include "state/IObserver.h"
#include "Animation.h"
#include "TileSet.h"
#include "Surface.h"

namespace Render {

  /// class Layer - 
  class Layer : public state::IObserver {
    // Associations
    // Attributes
  protected:
    std::map<int,Animation*> animations;
    const TileSet* tileset;
    Surface* surface;
    // Operations
  public:
    Layer ();
    virtual ~Layer ();
    const TileSet* getTileSet ();
    void setTileSet (const TileSet* tileset);
    void setSurface (Surface* surface);
    void setAnimation (int i, Animation* a);
    void printText (int x, int y, const char* msg, int spriteIdx, int w, int h);
    void stateChanged (state::StateEvent* e);
    void stateChanged (state::StateEvent* e, std::vector<state::Element*> list);
  protected:
    void update (const state::State& elementList);
  };

};

#endif
