// Generated by dia2code
#ifndef RENDER__SURFACE__H
#define RENDER__SURFACE__H

#include <string>
#include <SFML/Graphics.hpp>
#include <vector>

namespace state {
  class Element;
};
namespace sf {
  class Transformable;
  class Drawable;
}


namespace Render {

  /// class Surface - 
  class Surface : public sf::Transformable, public sf::Drawable {
    // Attributes
  private:
    sf::VertexArray m_vertices;
    sf::Texture m_tileset;
    // Operations
  public:
    Surface ();
    ~Surface ();
    virtual void clear ();
    bool load (const std::string& tileset, sf::Vector2u tileSize1, sf::Vector2u tileSize2,  const int* tiles, unsigned int width, unsigned int height);
    virtual void  draw (sf::RenderTarget& target, sf::RenderStates states) const;
    void generateMap (std::vector<state::Element*>& list, std::vector<int>& tab);
    void generateMap (std::vector<int>& tab);
  };

};

#endif
