#include <iostream>
#include <map>
#include <memory>

//Les lignes suivantes ne servent qu'à vérifier que la compilation avec SFML fonctionne
#include <SFML/Graphics.hpp>
#include "TileMap.hpp"

using namespace sf;

int testSFML() {
    // on crée la fenêtre
    sf::RenderWindow window(sf::VideoMode(1500, 1500), "Tilemap"/*, sf::Style::Fullscreen*/);
    
    sf::View view;
    view.setCenter(3000,3000);
    view.zoom(6.f);
    
        


    // on définit le niveau à l'aide de numéro de tuiles
    const int level[] =
    {
            //01,02,03,04,05,06,07,08,09,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,
        /*01*/36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
        /*02*/18,19,19,19,19,19,19,19,19,22,36,36,36,36,36,36,03,01,01,01,01,00,01,01,01,01,01,01,04,07,07,36,36,07,07,03,01,01,01,02,
        /*03*/29,29,29,29,29,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,11,11,11,11,11,11,11,36,36,36,36,36,36,36,36,11,11,11,11,
        /*04*/29,29,29,29,29,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,11,11,11,11,11,11,11,36,36,36,36,36,36,36,36,11,11,11,11,
        /*05*/29,29,29,29,29,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,11,11,11,11,11,11,11,01,01,01,01,04,36,36,36,11,11,11,11,
        /*06*/29,29,29,29,29,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,11,11,11,11,11,11,11,36,36,36,36,36,36,36,36,11,11,11,11,
        /*07*/29,29,29,29,29,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,11,11,11,11,11,11,11,36,36,36,36,36,36,03,01,11,11,11,11,
        /*08*/29,29,29,29,29,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,11,11,11,11,11,11,11,36,36,36,36,36,36,36,36,11,11,11,11,
        /*09*/29,29,29,29,29,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,11,11,11,11,11,11,11,01,01,01,04,36,36,36,36,11,11,11,11,
        /*10*/29,29,29,29,29,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,11,11,11,11,11,11,11,36,36,36,36,36,36,36,36,11,11,11,11,
        /*11*/29,29,29,29,29,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,11,11,11,11,11,11,11,36,36,36,36,36,03,01,01,11,11,11,11,
        /*12*/29,29,29,29,29,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,11,11,11,11,11,11,11,36,36,36,36,36,36,36,36,11,11,11,11,
        /*13*/29,29,29,29,29,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,11,11,11,11,11,11,11,01,01,04,36,36,36,36,36,11,11,11,11,
        /*14*/29,29,29,29,29,19,19,19,22,36,36,36,36,36,36,36,36,03,01,01,01,11,11,11,11,11,11,11,36,36,36,36,36,36,36,36,11,11,11,11,
        /*15*/29,29,29,29,29,29,29,29,36,36,36,36,36,36,36,36,36,36,11,11,11,11,11,11,11,11,11,11,36,36,36,36,03,01,01,01,11,11,11,11,
        /*16*/29,29,29,29,29,29,29,36,36,36,36,36,36,36,36,36,36,36,36,11,11,11,11,11,11,11,11,11,36,36,36,36,36,36,36,36,11,11,11,11,
        /*17*/29,29,29,29,29,29,36,36,36,36,36,36,36,36,36,36,36,36,36,36,11,11,11,11,11,11,11,11,01,04,36,36,36,36,36,36,11,11,11,11,
        /*18*/29,29,29,29,29,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,03,11,11,11,11,
        /*19*/29,29,29,29,29,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,11,11,11,11,
        /*20*/29,29,29,29,29,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,11,11,11,11,
        /*21*/29,29,29,29,29,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,03,01,01,01,01,11,11,11,11,
        /*22*/29,29,29,29,29,36,36,36,36,21,19,22,36,36,36,03,01,04,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,11,11,11,11,
        /*23*/29,29,29,29,29,36,36,36,36,36,29,36,36,36,36,36,11,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,11,11,11,11,
        /*24*/29,29,29,29,29,36,36,36,36,36,29,36,36,36,36,36,11,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,11,11,11,11,
        /*25*/29,29,29,29,29,36,36,36,36,36,29,36,36,36,36,36,11,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,11,11,11,11,
        /*26*/29,29,29,29,29,31,30,19,31,30,29,31,30,19,31,12,11,13,12,01,13,12,01,13,12,01,13,12,01,13,12,01,13,12,01,01,11,11,11,11,
        /*27*/29,29,29,29,29,36,36,29,36,36,29,36,36,29,36,36,11,36,36,11,36,36,11,36,36,11,36,36,11,36,36,11,36,36,11,11,11,11,11,11,
        /*28*/29,29,29,29,29,36,36,29,36,36,29,36,36,29,36,36,11,36,36,11,36,36,11,36,36,11,36,36,11,36,36,11,36,36,11,11,11,11,11,11,
        /*29*/29,29,29,29,29,36,36,29,36,36,29,36,36,29,36,36,11,36,36,11,36,36,11,36,36,11,36,36,11,36,36,11,36,36,11,11,11,11,11,11,
        /*30*/29,29,29,29,29,36,36,29,36,36,29,36,36,29,36,36,11,36,36,11,36,36,11,36,36,11,36,36,11,36,36,11,36,36,11,11,11,11,11,11
        
    };

    // on crée la tilemap avec le niveau précédemment défini
    TileMap map;
    if (!map.load("../res/tileset.png", sf::Vector2u(125, 97), level, 40, 30))
        return -1;

    // on fait tourner la boucle principale
    while (window.isOpen())
    {
        // on gère les évènements
        sf::Event event;
        while (window.pollEvent(event))
        {
            if(event.type==sf::Event::Closed)
            {
                // fenêtre fermée
                window.close();
            }    
                // touche pressée
            
                    if (sf::Keyboard::isKeyPressed(sf::Keyboard::Left))
                    {view.setCenter(view.getCenter()-sf::Vector2f (75.f, 0.f));}
                    if (sf::Keyboard::isKeyPressed(sf::Keyboard::Right))
                    {view.setCenter(view.getCenter()+sf::Vector2f (75.f, 0.f));}
                    if (sf::Keyboard::isKeyPressed(sf::Keyboard::Up))
                    {view.setCenter(view.getCenter()-sf::Vector2f (0.f, 75.f));}
                    if (sf::Keyboard::isKeyPressed(sf::Keyboard::Down))
                    {view.setCenter(view.getCenter()+sf::Vector2f (0.f, 75.f));}
                 
                    if (sf::Keyboard::isKeyPressed(sf::Keyboard::Add))
                    {view.zoom(0.9f);}
                    if (sf::Keyboard::isKeyPressed(sf::Keyboard::Subtract))
                    {view.zoom(1.1f);}
                
        }

        
        window.clear();
        window.setView(view);
        window.draw(map);
        window.display();
    }
    
    return 0;
    
}

// Fin test SFML

#include "state.hpp"

using namespace std;
using namespace state;

int main(int argc,char* argv[]) 
{
    
    int x;
    x=testSFML();
    
    return x;
}
